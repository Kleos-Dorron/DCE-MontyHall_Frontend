{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../monty-hall/monty-hall.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction SimulationFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 8);\n    i0.ɵɵtext(2, \"Simulating...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SimulationFormComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class SimulationFormComponent {\n  constructor(montyHallService) {\n    this.montyHallService = montyHallService;\n    this.numSimulations = 1000;\n    this.changeDoor = true;\n    this.isSimulating = false;\n    this.errorMessage = '';\n    this.simulationResults = null;\n  }\n  startSimulation() {\n    const request = {\n      numSimulations: this.numSimulations,\n      changeDoor: this.changeDoor\n    };\n    this.montyHallService.simulateGame(request).subscribe({\n      next: result => {\n        // Handle the simulation results, e.g., update the results component\n        this.isSimulating = false;\n        this.simulationResults = result;\n      },\n      error: error => {\n        // Handle errors\n        this.isSimulating = false;\n        this.errorMessage = 'An error occurred while simulating the Monty Hall game.';\n      }\n    });\n  }\n  static #_ = this.ɵfac = function SimulationFormComponent_Factory(t) {\n    return new (t || SimulationFormComponent)(i0.ɵɵdirectiveInject(i1.MontyHallService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SimulationFormComponent,\n    selectors: [[\"app-simulation-form\"]],\n    decls: 20,\n    vars: 4,\n    consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"numSimulations\"], [\"type\", \"number\", \"id\", \"numSimulations\", \"name\", \"numSimulations\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"changeDoor\"], [\"type\", \"checkbox\", \"id\", \"changeDoor\", \"name\", \"changeDoor\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngIf\"], [1, \"loading\"], [1, \"error\"]],\n    template: function SimulationFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"simulation-form works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"h2\");\n        i0.ɵɵtext(4, \"Monty Hall Simulation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SimulationFormComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.startSimulation();\n        });\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 2);\n        i0.ɵɵtext(8, \"Number of Simulations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function SimulationFormComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.numSimulations = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 4);\n        i0.ɵɵtext(12, \"Change the Door\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function SimulationFormComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.changeDoor = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"button\", 6);\n        i0.ɵɵtext(15, \"Start Simulation\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtext(16, \" // Load Indicator \");\n        i0.ɵɵtemplate(17, SimulationFormComponent_div_17_Template, 3, 0, \"div\", 7);\n        i0.ɵɵtext(18, \" // Error Handler via UI \");\n        i0.ɵɵtemplate(19, SimulationFormComponent_div_19_Template, 3, 1, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.numSimulations);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.changeDoor);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSimulating);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","errorMessage","SimulationFormComponent","constructor","montyHallService","numSimulations","changeDoor","isSimulating","simulationResults","startSimulation","request","simulateGame","subscribe","next","result","error","_","ɵɵdirectiveInject","i1","MontyHallService","_2","selectors","decls","vars","consts","template","SimulationFormComponent_Template","rf","ctx","ɵɵlistener","SimulationFormComponent_Template_form_ngSubmit_5_listener","SimulationFormComponent_Template_input_ngModelChange_9_listener","$event","SimulationFormComponent_Template_input_ngModelChange_13_listener","ɵɵtemplate","SimulationFormComponent_div_17_Template","SimulationFormComponent_div_19_Template","ɵɵproperty"],"sources":["S:\\Studies\\DCE-ASE-Assignment\\MontyHall_Frontend\\src\\app\\simulation-form\\simulation-form.component.ts","S:\\Studies\\DCE-ASE-Assignment\\MontyHall_Frontend\\src\\app\\simulation-form\\simulation-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MontyHallService } from '../monty-hall/monty-hall.service';\n\n@Component({\n  selector: 'app-simulation-form',\n  templateUrl: './simulation-form.component.html',\n  styleUrls: ['./simulation-form.component.css'],\n})\nexport class SimulationFormComponent {\n  numSimulations: number = 1000;\n  changeDoor: boolean = true;\n  isSimulating: boolean = false;\n  errorMessage: string = '';\n  simulationResults: any = null;\n\n  constructor(private montyHallService: MontyHallService) { }\n\n  startSimulation() {\n    const request = {\n      numSimulations: this.numSimulations,\n      changeDoor: this.changeDoor,\n    };\n\n    this.montyHallService.simulateGame(request).subscribe({\n      next: (result) => {\n        // Handle the simulation results, e.g., update the results component\n        this.isSimulating = false;\n        this.simulationResults = result;\n      },\n      error: (error) => {\n        // Handle errors\n        this.isSimulating = false;\n        this.errorMessage = 'An error occurred while simulating the Monty Hall game.';\n      },\n    });\n  }\n}\n","<p>simulation-form works!</p>\n<div>\n    <h2>Monty Hall Simulation</h2>\n    <form (ngSubmit)=\"startSimulation()\">\n        <div class=\"form-group\">\n            <label for=\"numSimulations\">Number of Simulations</label>\n            <input type=\"number\" id=\"numSimulations\" name=\"numSimulations\" [(ngModel)]=\"numSimulations\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"changeDoor\">Change the Door</label>\n            <input type=\"checkbox\" id=\"changeDoor\" name=\"changeDoor\" [(ngModel)]=\"changeDoor\">\n        </div>\n        <button type=\"submit\">Start Simulation</button>\n    </form>\n    // Load Indicator\n    <div *ngIf=\"isSimulating\">\n        <p class=\"loading\">Simulating...</p>\n    </div>\n    // Error Handler via UI\n    <div *ngIf=\"errorMessage\">\n        <p class=\"error\">{{ errorMessage }}</p>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}