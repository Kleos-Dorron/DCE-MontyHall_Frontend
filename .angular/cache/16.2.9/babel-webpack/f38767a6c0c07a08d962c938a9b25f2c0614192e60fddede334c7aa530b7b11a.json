{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../monty-hall/monty-hall.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nexport class SimulationFormComponent {\n  constructor(montyHallService) {\n    this.montyHallService = montyHallService;\n    this.numSimulations = 100;\n    this.changeDoor = true;\n    this.isSimulating = false;\n    this.errorMessage = '';\n    this.simulationResults = null;\n  }\n  startSimulation() {\n    const request = {\n      numSimulations: this.numSimulations,\n      changeDoor: this.changeDoor\n    };\n    this.montyHallService.simulateGame(request).subscribe({\n      next: result => {\n        console.log('API Response', result);\n        // Handle the simulation results, e.g., update the results component\n        this.isSimulating = false;\n        this.simulationResults = result;\n      },\n      error: error => {\n        console.log('API Error:', error);\n        // Handle errors\n        this.isSimulating = false;\n        this.errorMessage = 'An error occurred while simulating the Monty Hall game.';\n      }\n    });\n  }\n  static #_ = this.ɵfac = function SimulationFormComponent_Factory(t) {\n    return new (t || SimulationFormComponent)(i0.ɵɵdirectiveInject(i1.MontyHallService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SimulationFormComponent,\n    selectors: [[\"app-simulation-form\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"numSimulations\"], [\"type\", \"number\", \"id\", \"numSimulations\", \"name\", \"numSimulations\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"changeDoor\"], [\"type\", \"checkbox\", \"id\", \"changeDoor\", \"name\", \"changeDoor\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"ngIf\", \"isSimulating\"], [1, \"loading\"], [\"ngIf\", \"errorMessage\"], [1, \"error\"]],\n    template: function SimulationFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Monty Hall Simulation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function SimulationFormComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.startSimulation();\n        });\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n        i0.ɵɵtext(6, \"Number of Simulations\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function SimulationFormComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.numSimulations = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Change the Door\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function SimulationFormComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.changeDoor = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13, \"Start Simulation\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 7)(15, \"p\", 8);\n        i0.ɵɵtext(16, \"Simulating...\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 9)(18, \"p\", 10);\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.numSimulations);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.changeDoor);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(ctx.errorMessage);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["SimulationFormComponent","constructor","montyHallService","numSimulations","changeDoor","isSimulating","errorMessage","simulationResults","startSimulation","request","simulateGame","subscribe","next","result","console","log","error","_","i0","ɵɵdirectiveInject","i1","MontyHallService","_2","selectors","decls","vars","consts","template","SimulationFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SimulationFormComponent_Template_form_ngSubmit_3_listener","SimulationFormComponent_Template_input_ngModelChange_7_listener","$event","SimulationFormComponent_Template_input_ngModelChange_11_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate"],"sources":["S:\\Studies\\DCE-ASE-Assignment\\MontyHall_Frontend\\src\\app\\simulation-form\\simulation-form.component.ts","S:\\Studies\\DCE-ASE-Assignment\\MontyHall_Frontend\\src\\app\\simulation-form\\simulation-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { MontyHallService } from '../monty-hall/monty-hall.service';\n\n@Component({\n  selector: 'app-simulation-form',\n  templateUrl: './simulation-form.component.html',\n  styleUrls: ['./simulation-form.component.css'],\n})\nexport class SimulationFormComponent {\n  numSimulations: number = 100;\n  changeDoor: boolean = true;\n  isSimulating: boolean = false;\n  errorMessage: string = '';\n  simulationResults: any = null;\n\n  constructor(private montyHallService: MontyHallService) { }\n\n  startSimulation() {\n    const request = {\n      numSimulations: this.numSimulations,\n      changeDoor: this.changeDoor,\n    };\n\n    this.montyHallService.simulateGame(request).subscribe({\n      next: (result) => {\n        console.log('API Response', result);\n        // Handle the simulation results, e.g., update the results component\n        this.isSimulating = false;\n        this.simulationResults = result;\n      },\n      error: (error) => {\n        console.log('API Error:', error);\n        // Handle errors\n        this.isSimulating = false;\n        this.errorMessage = 'An error occurred while simulating the Monty Hall game.';\n      },\n    });\n  }\n}\n","<!--<p>simulation-form works!</p>-->\n<div>\n    <h2>Monty Hall Simulation</h2>\n    <form (ngSubmit)=\"startSimulation()\">\n        <div class=\"form-group\">\n            <label for=\"numSimulations\">Number of Simulations</label>\n            <input type=\"number\" id=\"numSimulations\" name=\"numSimulations\" [(ngModel)]=\"numSimulations\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"changeDoor\">Change the Door</label>\n            <input type=\"checkbox\" id=\"changeDoor\" name=\"changeDoor\" [(ngModel)]=\"changeDoor\">\n        </div>\n        <button type=\"submit\">Start Simulation</button>\n    </form>\n    <!--Load Indicator-->\n    <div ngIf=\"isSimulating\">\n        <p class=\"loading\">Simulating...</p>\n    </div>\n    <!--Error Handler via UI-->\n    <div ngIf=\"errorMessage\">\n        <p class=\"error\">{{ errorMessage }}</p>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}